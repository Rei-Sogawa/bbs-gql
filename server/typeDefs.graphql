scalar DateTime

type User {
  id: ID!
  displayName: String!
  topics: [Topic!]!
}

union TopicOrComment = Topic | Comment

type Topic {
  id: ID!
  title: String!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  root: Topic!
  parent: TopicOrComment!
  user: User!
  comments: [Comment!]!
}

type Query {
  me: User!
  topic(id: ID!): Topic!
  topics: [Topic!]!
}

input SignUpInput {
  displayName: String!
  email: String!
  password: String!
}

input CreateTopicInput {
  title: String!
  content: String!
}

input UpdateTopicInput {
  title: String!
  content: String!
}

input CreateCommentInput {
  content: String!
  parentName: String!
  parentId: String!
}

input UpdateCommentInput {
  content: String!
}

type Mutation {
  signUp(input: SignUpInput!): User!
  createTopic(input: CreateTopicInput!): Topic!
  updateTopic(id: ID!, input: UpdateTopicInput!): Topic!
  deleteTopic(id: ID!): Topic!
  createComment(input: CreateCommentInput!): TopicOrComment!
  updateComment(id: ID!, input: UpdateCommentInput!): Comment!
  deleteComment(id: ID!): TopicOrComment!
}
